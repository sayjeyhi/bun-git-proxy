apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "calendar-app.fullname" . }}
  labels:
    {{- include "calendar-app.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.deployment.replicas }}
  strategy:
    type: {{ .Values.deployment.strategy.type }}
    {{- if eq .Values.deployment.strategy.type "RollingUpdate" }}
    rollingUpdate:
      maxSurge: {{ .Values.deployment.strategy.rollingUpdate.maxSurge }}
      maxUnavailable: {{ .Values.deployment.strategy.rollingUpdate.maxUnavailable }}
    {{- end }}
  selector:
    matchLabels:
      {{- include "calendar-app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "calendar-app.selectorLabels" . | nindent 8 }}
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ include "calendar-app.serviceAccountName" . }}
      {{- end }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - name: http
          containerPort: {{ .Values.app.port }}
          protocol: TCP
        {{- if .Values.env }}
        env:
        {{- range $key, $value := .Values.env }}
        - name: {{ $key }}
          value: {{ $value | quote }}
        {{- end }}
        {{- end }}
        livenessProbe:
          httpGet:
            path: {{ .Values.app.healthPath }}
            port: {{ .Values.app.port }}
          initialDelaySeconds: {{ .Values.healthChecks.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.healthChecks.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.healthChecks.livenessProbe.timeoutSeconds }}
          failureThreshold: {{ .Values.healthChecks.livenessProbe.failureThreshold }}
        readinessProbe:
          httpGet:
            path: {{ .Values.app.healthPath }}
            port: {{ .Values.app.port }}
          initialDelaySeconds: {{ .Values.healthChecks.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.healthChecks.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.healthChecks.readinessProbe.timeoutSeconds }}
          failureThreshold: {{ .Values.healthChecks.readinessProbe.failureThreshold }}
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        {{- with .Values.securityContext }}
        securityContext:
          {{- toYaml . | nindent 10 }}
        {{- end }}
